import{r as s,h as t}from"./p-ac9ca13b.js";class r{constructor(s=!1,t=[]){this._isValid=s,this._errors=t}get errors(){return this._errors}get isValid(){return this._isValid}hasErrors(){return this._errors.length>0}}class e{validate(s){let t=this.getErrorsForValue(s);return new r(0===t.length,t)}getErrorsForValue(s){let t=[];return""===s&&t.push("Password cannot be empty"),!1===/[A-Z]+/.test(s)&&t.push("Password must contain at least one uppercase letter"),!1===/[0-9]+/.test(s)&&t.push("Password must contain at least one number"),t}}const a=class{constructor(t){s(this,t),this.service=new e,this.name="name",this.placeholder="Enter your password",this.value=""}async isValid(){return this.state=this.service.validate(this.value),this.state.isValid}componentWillLoad(){this.state=new r}handleKeyUp(s){this.value=s.target.value,this.isValid()}renderFeedbackFragment(){if(this.state.hasErrors())return t("ul",{class:"errors"},this.state.errors.map(s=>t("li",null,s)))}render(){return t("div",{class:this.state.hasErrors()?"has-errors":""},t("label",{htmlFor:this.name},"Password"),t("input",{type:"password",name:this.name,placeholder:this.placeholder,onKeyUp:s=>this.handleKeyUp(s)}),this.renderFeedbackFragment())}static get style(){return":host{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-size:16px;line-height:32px;color:#333}label{padding:0 15px}.has-errors input{border:1px solid red}.errors{color:red}"}};export{a as validated_password_input};